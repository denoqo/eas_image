tcga_codes = c("luad_tcga","brca_tcga",
"ov_tcga", "coadread_tcga")
gene_list = GetGene("gw")
shiny::runApp()
# Genome-wide genes
tcga_codes = c("luad_tcga","brca_tcga",
"ov_tcga", "coadread_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
all_genes <- rownames(mat)
genes_amp <- all_genes[rowSums(mat>=2) > 0]
length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
mae <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", mols_id)
)
print(sprintf("finish %s", tcga_code))
saveRDS(mae, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
# Genome-wide genes
tcga_codes = c("brca_tcga",
"ov_tcga", "coadread_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
all_genes <- rownames(mat)
genes_amp <- all_genes[rowSums(mat>=2) > 0]
length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
mae <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", mols_id)
)
print(sprintf("finish %s", tcga_code))
saveRDS(mae, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
# Genome-wide genes
tcga_codes = c(
"ov_tcga", "coadread_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
all_genes <- rownames(mat)
genes_amp <- all_genes[rowSums(mat>=2) > 0]
length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
mae <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", mols_id)
)
print(sprintf("finish %s", tcga_code))
saveRDS(mae, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
print(tcga_code)
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
all_genes <- rownames(mat)
genes_amp <- all_genes[rowSums(mat>=2) > 0]
length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
mae <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
print(sprintf("finish %s", tcga_code))
mae
out <- MultiAssayExperiment::longFormat(expr) %>% as_tibble() %>%
dplyr::rename(sample_id = colname, gene = rowname)
out
out <- MultiAssayExperiment::longFormat(mae) %>% as_tibble() %>%
dplyr::rename(sample_id = colname, gene = rowname)
out
out <- MultiAssayExperiment::longFormat(mae) %>% as_tibble() %>%
select(assay, sample_id = colname, gene = rowname)
out_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(assay, sample_id = colname, gene = rowname)
out_rppa
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
all_genes <- rownames(mat)
genes_amp <- all_genes[rowSums(mat>=1) > 0]
length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(assay, sample_id = colname, gene = rowname)
genes_amp
cn
mat
long_cn <- cn %>% pivot_longer(mat)
long_cn <- cn %>% pivot_longer(as_tibble(mat, rownames("gene")))
long_cn <- cn %>%
pivot_longer(as_tibble(mat, rownames("gene")),
names_to = "sample_id", values_to = "value")
?pivot_longer
long_cn <- pivot_longer(as_tibble(mat, rownames("gene")), -gene,
names_to = "sample_id", values_to = "value")
as_tibble(mat, rownames("gene"))
long_cn <- pivot_longer(as_tibble(mat, rownames="gene"), -gene,
names_to = "sample_id", values_to = "value")
long_cn
long_cn <- pivot_longer(as_tibble(mat, rownames="gene"), -gene,
names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
long_cn
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn_link <- glue::glue("https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.{code}.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz")
cn <- vroom::vroom(cn_link)
names(cn[1]) <- "gene"
mat <- cn %>% column_to_rownames(names(cn[1]))
long_cn <- pivot_longer(as_tibble(mat, rownames="gene"), -gene,
names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
genes_amp
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
genes_amp
long_cn
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, label)
tcga_code
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
wk_dir
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
# CNA
print(sprintf("Readin CNA genes %s", tcga_code))
code = str_to_upper(str_remove(tcga_code, "_tcga"))
cn <- vroom::vroom(path_cna)
cn
cn
cn <- vroom::vroom(path_cna) %>% select(Entrez_Gene)
names( vroom::vroom(path_cna))
tcga_code
tcga_code = "chol_tcga"
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
cn <- vroom::vroom(path_cna) %>% select(Entrez_Gene)
length(vroom::vroom(path_cna))
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id)
cn
long_cn <- pivot_longer(cn, -Hugo_Symbol,
names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
long_cn
genes_amp <- unique(long_cn$gene); length(genes_amp)
long_cn <- pivot_longer(cn, -gene,
names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>% rename(gene = Hugo_Symbol)
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
# MRNA
print(sprintf("Readin MRNA genes %s", tcga_code))
cn <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
mrna <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
mrna
long_mrna <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_mrna$gene); length(genes_amp)
genes_amp <- unique(long_mrna$gene); length(genes_amp)
print(sprintf("Finish Readin mRNA genes %s", length(genes_amp)))
genes_amp
genes_mrna <- unique(long_mrna$gene); length(genes_amp)
print(sprintf("Finish Readin mRNA genes %s", length(genes_amp)))
genes_mrna <- unique(long_mrna$gene); length(genes_mrna)
print(sprintf("Finish Readin mRNA genes %s", length(genes_mrna)))
gene_list
# RPPA
gene_list = gene_list
mae_rppa <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(assay, sample_id = colname, gene = rowname)
print(sprintf("finish %s", tcga_code))
long_rppa
genes_mrna
long_mrna
long_rppa
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(sample_id = colname, gene = rowname, value)
long_rppa
mae_list <-
list(
"gistic" = long_cn,
"rna_seq_v2_mrna_median_Zscores" = long_cn,
"rppa_Zscores" = long_cn
)
mae_list
saveRDS(mae_list, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
mae_list
for (tcga_code in tcga_codes) {
print(tcga_code)
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
# CNA
print(sprintf("Readin CNA genes %s", tcga_code))
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
# MRNA
print(sprintf("Readin MRNA genes %s", tcga_code))
mrna <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_mrna <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_mrna <- unique(long_mrna$gene); length(genes_mrna)
print(sprintf("Finish Readin mRNA genes %s", length(genes_mrna)))
# RPPA
gene_list = gene_list
mae_rppa <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(sample_id = colname, gene = rowname, value)
print(sprintf("finish %s", tcga_code))
mae_list <-
list(
"gistic" = long_cn,
"rna_seq_v2_mrna_median_Zscores" = long_mrna,
"rppa_Zscores" = long_rppa
)
saveRDS(mae_list, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
tcga_codes
path_mut <- sprintf("%s/%s/data_mutations.txt", wk_dir, tcga_code)
vroom::vroom(path_mut)
mut <- vroom::vroom(path_mut)
mut <- vroom::vroom(path_mut)  %>%
select(gene = Hugo_Symbol, sample_id = Tumor_Sample_Barcode) %>%
mutate(value = 1)
mut
genes_mut <- unique(long_mut$gene); length(genes_amp)
genes_mut <- unique(long_mut$gene); length(genes_mut)
long_mut <- vroom::vroom(path_mut)  %>%
select(gene = Hugo_Symbol, sample_id = Tumor_Sample_Barcode) %>%
mutate(value = 1)
genes_mut <- unique(long_mut$gene); length(genes_mut)
# Genome-wide genes
tcga_codes = c("paad_tcga", "coadread_tcga","brca_tcga",
"luad_tcga","ov_tcga","chol_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
# Genome-wide genes
tcga_codes = c("chol_tcga", "paad_tcga", "coadread_tcga","brca_tcga",
"luad_tcga","ov_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
path_mut <- sprintf("%s/%s/data_mutations.txt", wk_dir, tcga_code)
# mutation
print(sprintf("Readin mutation genes %s", tcga_code))
long_mut <- vroom::vroom(path_mut)  %>%
select(gene = Hugo_Symbol, sample_id = Tumor_Sample_Barcode) %>%
mutate(value = 1)
genes_mut <- unique(long_mut$gene); length(genes_mut)
print(sprintf("Finish Readin Mutation genes %s", length(genes_mut)))
# CNA
print(sprintf("Readin CNA genes %s", tcga_code))
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
# MRNA
print(sprintf("Readin MRNA genes %s", tcga_code))
mrna <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_mrna <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_mrna <- unique(long_mrna$gene); length(genes_mrna)
print(sprintf("Finish Readin mRNA genes %s", length(genes_mrna)))
# RPPA
gene_list = gene_list
mae_rppa <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(sample_id = colname, gene = rowname, value)
print(sprintf("finish %s", tcga_code))
mae_list <-
list(
"gistic" = long_cn,
"rna_seq_v2_mrna_median_Zscores" = long_mrna,
"rppa_Zscores" = long_rppa,
"mutation" = long_mut
)
saveRDS(mae_list, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
# Genome-wide genes
tcga_codes = c(#"chol_tcga", "paad_tcga", "coadread_tcga","brca_tcga",
"luad_tcga","ov_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
path_mut <- sprintf("%s/%s/data_mutations.txt", wk_dir, tcga_code)
# mutation
print(sprintf("Readin mutation genes %s", tcga_code))
long_mut <- vroom::vroom(path_mut)  %>%
select(gene = Hugo_Symbol, sample_id = Tumor_Sample_Barcode) %>%
mutate(value = 1)
genes_mut <- unique(long_mut$gene); length(genes_mut)
print(sprintf("Finish Readin Mutation genes %s", length(genes_mut)))
# CNA
print(sprintf("Readin CNA genes %s", tcga_code))
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
# MRNA
print(sprintf("Readin MRNA genes %s", tcga_code))
mrna <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_mrna <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_mrna <- unique(long_mrna$gene); length(genes_mrna)
print(sprintf("Finish Readin mRNA genes %s", length(genes_mrna)))
# RPPA
gene_list = gene_list
mae_rppa <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(sample_id = colname, gene = rowname, value)
print(sprintf("finish %s", tcga_code))
mae_list <-
list(
"gistic" = long_cn,
"rna_seq_v2_mrna_median_Zscores" = long_mrna,
"rppa_Zscores" = long_rppa,
"mutation" = long_mut
)
saveRDS(mae_list, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
# Genome-wide genes
tcga_codes = c(#"chol_tcga", "paad_tcga", "coadread_tcga","brca_tcga",
"ov_tcga","luad_tcga")
gene_list = GetGene("gw")
mols_id = c("gistic", "rna_seq_v2_mrna_median_Zscores", "rppa_Zscores")
mae_list_onco <- list()
for (tcga_code in tcga_codes) {
print(tcga_code)
wk_dir <- "/Users/qixu/Library/CloudStorage/Box-Box/Kowalski Lab/Labrary/Expressed Amplified Signatures TCGA/data"
path_cna <- sprintf("%s/%s/data_cna.txt", wk_dir, tcga_code)
path_mrna <- sprintf("%s/%s/data_mrna_seq_v2_rsem_zscores_ref_diploid_samples.txt", wk_dir, tcga_code)
path_mut <- sprintf("%s/%s/data_mutations.txt", wk_dir, tcga_code)
# mutation
print(sprintf("Readin mutation genes %s", tcga_code))
long_mut <- vroom::vroom(path_mut)  %>%
select(gene = Hugo_Symbol, sample_id = Tumor_Sample_Barcode) %>%
mutate(value = 1)
genes_mut <- unique(long_mut$gene); length(genes_mut)
print(sprintf("Finish Readin Mutation genes %s", length(genes_mut)))
# CNA
print(sprintf("Readin CNA genes %s", tcga_code))
cn <- vroom::vroom(path_cna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_cn <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_amp <- unique(long_cn$gene); length(genes_amp)
print(sprintf("Finish Readin CNA genes %s", length(genes_amp)))
# MRNA
print(sprintf("Readin MRNA genes %s", tcga_code))
mrna <- vroom::vroom(path_mrna) %>% select(-Entrez_Gene_Id) %>%
dplyr::rename(gene = Hugo_Symbol)
long_mrna <- pivot_longer(cn, -gene, names_to = "sample_id", values_to = "value") %>%
filter(value >= 1)
genes_mrna <- unique(long_mrna$gene); length(genes_mrna)
print(sprintf("Finish Readin mRNA genes %s", length(genes_mrna)))
# RPPA
gene_list = gene_list
mae_rppa <- cBioPortalData::cBioPortalData(
api = cbio,
by = "hugoGeneSymbol",
studyId = tcga_code,
genes = gene_list,
molecularProfileIds = paste0(tcga_code, "_", "rppa_Zscores")
)
long_rppa <- MultiAssayExperiment::longFormat(mae_rppa) %>% as_tibble() %>%
select(sample_id = colname, gene = rowname, value)
print(sprintf("finish %s", tcga_code))
mae_list <-
list(
"gistic" = long_cn,
"rna_seq_v2_mrna_median_Zscores" = long_mrna,
"rppa_Zscores" = long_rppa,
"mutation" = long_mut
)
saveRDS(mae_list, sprintf("data/mae/mae_list_gw/%s.rds", tcga_code))
print(sprintf("Finish saving %s", tcga_code))
}
mae_list_gw <-
map(tcga_codes, ~readRDS(sprintf("data/mae/mae_list_gw/%s.rds", .x)))
mae_list_gw
names(mae_list_gw) <- tcga_codes
mae_list_gw
saveRDS(mae_list_gw, "data/mae/mae_list_gw.rds")
tcga_codes
# Genome-wide genes
tcga_codes = c("chol_tcga", "paad_tcga", "coadread_tcga","brca_tcga",
"ov_tcga","luad_tcga")
mae_list_gw <-
map(tcga_codes, ~readRDS(sprintf("data/mae/mae_list_gw/%s.rds", .x)))
names(mae_list_gw) <- tcga_codes
saveRDS(mae_list_gw, "data/mae/mae_list_gw.rds")
